// Автоматически импортируем все изображения из lesson1
const images = import.meta.glob(
  "../../assets/images/levels/beginner/lesson1/*.png",
  {
    eager: true,
    import: "default",
  }
);

const rawSteps = [
  {
    text: "А значит мы сможем сразу начать программировать (Рисунок 1).",
  },
  {
    text: "На этом занятии мы создадим свою первую программу, научимся добавлять спрайты и фоны. Сначала перейдем на сайт и создадим проект (Рисунок 2). Для создания проекта необходимо нажать на одну из выделенных кнопок «Создавай» или «Начни создавать» (Рисунок 2).",
  },
  {
    text: "После этого открывается новое окно – это и есть редактор проекта, в котором мы будем создавать игры, анимации и многое другое. По умолчанию сразу появится изображение котика (Рисунок 3)",
  },
  {
    text: [
      "Интерфейс Scratch включает в себя следующий элементы (Рисунок 3):",
      "1. Подгруппы команд;",
      "2. Блоки кода;",
      "3. Поле для программирования;",
      "4. Сцена;",
      "5. Настройки спрайта;",
      "6. Спрайты, использованные в проекте.",
      "Спрайт – это персонаж, предмет или любой другой элемент в проекте, который можно запрограммировать для выполнения различных действий.",
      "Подгруппы команд нужны для того, чтобы быстро переключаться между блоками команд. Они разделены по цветам, для лучшего визуального ориентирования в коде.",
      "Каждая из групп включает в себя команды, которые выполняют действия, присущие этой группе. Они так же разделены по соответствующим цветам.",
      "В поле для программирования строится сам код программы. Команды могут находится в нём в хаотичном порядке. При увеличении программы увеличивается и само поле.",
      "На сцене расставляются спрайты (объекты). Она имеет размер 480х360. Каждый из спрайтов на ней имеет собственное положение, то есть координаты (по х и у). ",
      "В настройках можно задать имя файла, его координаты, отобразить или скрыть спрайт, установить размер и направление спрайта (лево, право, верх, низ).",
      "В окне спрайтов отображаются все спрайты, которые добавлены в проект. Для каждого из них пишется отдельный код. ",
      "Для того, чтобы начать программировать, нужно выбрать спрайты, которые будем использовать в своём проекте. Для выбора спрайта наводим курсор мыши на клавишу (находится в нижнем правом углу). Откроется следующее (Рисунок 4):",
    ],
  },
  {
    text: [
      "Каждая из кнопок отвечают за следующие действия (снизу-вверх):",
      "1. Выбрать спрайт из предустановленных;",
      "2. Нарисовать спрайт;",
      "3. Случайный спрайт;",
      "4. Загрузка спрайта с компьютера.",
      "Давайте создадим диалог между двумя друзьями, у нас в проекте уже есть рыжий кот. Давайте добавим еще одного персонажа. ",
      "Нажимаем кнопку «Выбрать спрайт» и перед нами открывается следующее окно (Рисунок 5):",
    ],
  },
  {
    text: "Выберем любого понравившегося нам персонажа, например из раздела Животные. Давайте возьмем персонажа Chick – кликаем по нему левой кнопкой мыши (Рисунок 6)",
  },
  { text: "Сейчас два спрайта расположены рядом (Рисунок 7)." },
  {
    text: "Как тогда два персонажа будут общаться между собой? Наведем курсор мыши на спрайт, зажмем левую кнопку мыши и переместим персонажа немного вправо (Рисунок 8). Теперь персонажи находятся на достаточном расстоянии друг от друга.",
  },
  {
    text: "Теперь поместим спрайты друг напротив друга. Нажмем на персонажа Chick левой кнопкой мыши, чтобы сделать его активным  (Рисунок 9).",
  },
  {
    text: "Теперь нажмем на строчку «Направление» в разделе «Настройка спрайта». Сейчас там стоит значение по умолчанию 90 (Рисунок 10).",
  },
  {
    text: "В появившемся окне нажмем на кнопку посередине, а после потянем фиолетовую стрелочку влево, чтобы значение с 90 изменилось на -90. Отлично! Мы смогли развернуть персонажа в нужную сторону (Рисунок 11).",
  },
  {
    text: "Теперь напишем диалог! Из раздела События перетаскиваем элемент «Когда флажок нажат» на рабочую область. Как только нажмем на зеленый флажок, программа должна запуститься (Рисунок 12). ",
  },
  {
    text: [
      "Если сейчас мы нажмем на Зеленый флажок, то ничего не произойдет, так как мы не написали программу.",
      "Давайте исправим это и добавим первую фразу рыжему Котику.",
      "Для этого заходим в раздел «Внешний вид» и выбираем первое действие «Говорить Привет 2 секунды» (Рисунок 13).",
    ],
  },
  {
    text: [
      "Теперь, если мы нажмем на Зеленый флаг, то Котик будет говорить Цыпленку «Привет!».",
      "Давайте напишем ответ Цыпленка.",
      "Нажимаем на Цыпленка и добавляем ему из вкладки «События» действие «Когда Зеленый флаг нажат», далее добавляем из раздела «Управление» действие «Ждать 2 секунды». Это нужно, чтобы персонажи не перебивали друг друга (Рисунок 14).",
    ],
  },
  {
    text: "Теперь можно добавить действие «Говорить Привет 2 секунды» и «Говорить «Как дела?» 2 секунды» (Рисунок 15).",
  },
  {
    text: "Перейдем в программу Котика и добавим строчку «Ждать 4 секунды», чтобы Цыпленок успел договорить свою реплику (Рисунок 16).",
  },
  {
    text: "Теперь добавим ответ Котика на фразу Цыпленка. Можете самостоятельно придумать ответ (Рисунок 17).",
  },
  {
    text: "Давайте проверим, правильно ли работает наша программа. Нажмем на Зеленый Флаг и посмотрим, что получилось (Рисунок 18).",
  },
  {
    text: [
      "Теперь можете пофантазировать и придумать дальнейший диалог персонажей!",
      "Обязательно проверьте правильность выполнения программы: не перебивают ли персонажи друг друга, идут ли диалоги в нужном порядке и тд.",
      "Далее сохраним полученный проект и загрузим его для проверки. Нажмем на верхней панеле на «Файл» (Рисунок  19).",
    ],
  },
  {
    text: "После в выпадающем списке выбираем «Сохранить на свой компьютер». Теперь файл с проектом сохранен в Загрузки на вашем компьютере (Рисунок 20).",
  },
];

// Преобразуем изображения в массив шагов
const steps = Object.keys(images)
  .sort((a, b) => {
    // сортировка по имени файла (img_1, img_2 и т.д.)
    const numA = parseInt(a.match(/img_(\d+)\.png/)[1], 10);
    const numB = parseInt(b.match(/img_(\d+)\.png/)[1], 10);
    return numA - numB;
  })
  .map((path, index) => ({
    text: rawSteps[index]?.text || `Шаг ${index + 1}`,
    caption: `Рисунок ${index + 1}`,
    image: images[path],
  }));

export const lessons = {
  beginner: {
    1: {
      title: "Урок 1: Знакомство со Scratch",
      intro: [
        "Привет! Меня зовут Элли! Вместе со мной и моими друзьями ты погрузишься в мир увлекательного программирования и узнаешь много нового!",
        "Программировать совсем не сложно, если ты пользуешься специальными инструментами, например Scratch.",
        "Он простой и удобный, также его не нужно устанавливать на компьютер. Scratch доступен онлайн по ссылке https://scratch.mit.edu/",
      ],
      steps,
      final: "Поздравляю! Ты смог сделать свою первую программу!",
      task: "Создай проект с анимированным персонажем и фоном. Сохрани его и отправь учителю.",
    },
  },
};
